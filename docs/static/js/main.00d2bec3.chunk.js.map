{"version":3,"sources":["images/Rick_and_Morty_-_logo_(English).png","components/Header.js","components/CharacterCard.js","components/CharacterList.js","components/CharacterDetail.js","components/FilterName.js","components/FilterSpecies.js","components/Filters.js","services/api.js","services/localstorage.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","image","alt","CharacterCard","characters","to","id","name","species","CharacterList","characterElement","map","CharacterDetail","console","log","status","FilterName","props","htmlFor","type","onChange","ev","target","value","preventDefault","handleFilters","key","FilterSpecies","Filters","action","api","fetch","then","response","json","data","results","user","origin","episode","ls","get","defaultForm","localStorage","getItem","JSON","parse","set","setItem","stringify","App","useState","setCharacters","filterName","setFilterName","filterSpecie","setFilterSpecie","useEffect","length","filteredCharacter","filter","toLowerCase","toUpperCase","includes","exact","path","render","characterId","match","params","findCharacter","find","parseInt","undefined","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"kYAAe,MAA0B,4D,eCW1BA,MARf,WACE,OACE,wBAAQC,UAAU,eAAlB,SACE,qBAAKC,IAAKC,EAAOC,IAAI,cAAcH,UAAU,yB,eCapCI,MAhBf,YAAwC,IAAfC,EAAc,EAAdA,WACvB,OACE,oBAAIL,UAAU,YAAd,SACE,eAAC,IAAD,CAAMM,GAAE,sBAAiBD,EAAWE,IAApC,UACE,qBACEP,UAAU,mBACVC,IAAKI,EAAWH,MAChBC,IAAKE,EAAWG,OAElB,oBAAIR,UAAU,kBAAd,SAAiCK,EAAWG,OAC5C,mBAAGR,UAAU,oBAAb,SAAkCK,EAAWI,gB,MCEtCC,MAZf,YAAwC,IAChCC,EAD+B,EAAdN,WACaO,KAAI,SAACP,GACvC,OAAO,cAAC,EAAD,CAAmCA,WAAYA,GAA3BA,EAAWE,OAGxC,OACE,yBAASP,UAAU,iBAAnB,SACE,oBAAIA,UAAU,OAAd,SAAsBW,O,MC0BbE,MAjCf,YAA0C,IAAfR,EAAc,EAAdA,WAEzB,OADAS,QAAQC,IAAIV,GAEV,qBAAKL,UAAU,iBAAf,SACE,0BAASA,UAAU,OAAnB,UACE,qBAAKA,UAAU,YAAf,SACE,cAAC,IAAD,CAAMM,GAAG,IAAT,sBAEF,qBAAKL,IAAI,GAAGE,IAAI,GAAGH,UAAU,aAC7B,yBAASA,UAAU,YAAnB,SACE,qBAAIA,UAAU,kBAAd,UACE,oBAAIA,UAAU,wBAAd,SACE,6BAAKK,EAAWG,SAElB,qBAAIR,UAAU,wBAAd,qBACWK,EAAWW,UAEtB,oBAAIhB,UAAU,wBAAd,sBAGA,oBAAIA,UAAU,wBAAd,sBAGA,oBAAIA,UAAU,wBAAd,kCCJGiB,G,MApBI,SAACC,GAUlB,OACE,qCACE,wBAAOC,QAAQ,GAAGnB,UAAU,wBAA5B,mBACS,OAET,uBAAOoB,KAAK,OAAOpB,UAAU,SAASqB,SAdrB,SAACC,GACpBR,QAAQC,IAAIO,EAAGF,KAAME,EAAGC,OAAOC,OAC/BF,EAAGG,iBACHP,EAAMQ,cAAc,CAClBF,MAAOF,EAAGC,OAAOC,MACjBG,IAAK,iBCYIC,EAlBO,SAACV,GAQrB,OACE,qCACE,wBAAOC,QAAQ,GAAGnB,UAAU,0BAA5B,oBACU,OAEV,uBAAOoB,KAAK,OAAOpB,UAAU,SAASqB,SAZrB,SAACC,GACpBR,QAAQC,IAAIO,EAAGF,KAAME,EAAGC,OAAOC,OAC/BN,EAAMQ,cAAc,CAClBF,MAAOF,EAAGC,OAAOC,MACjBG,IAAK,mBCQIE,EAXC,SAACX,GACf,OACE,yBAASlB,UAAU,OAAnB,SACE,uBAAM8B,OAAO,GAAG9B,UAAU,kBAA1B,UACE,cAAC,EAAD,CAAY0B,cAAeR,EAAMQ,gBACjC,cAAC,EAAD,CAAeA,cAAeR,EAAMQ,sBCU7BK,EAlBH,WACV,OAAOC,MAAM,6CACVC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACL,OAAOA,EAAKC,QAAQzB,KAAI,SAAC0B,GACvB,MAAO,CACL9B,KAAM8B,EAAK9B,KACXD,GAAI+B,EAAK/B,GACTE,QAAS6B,EAAK7B,QACdP,MAAOoC,EAAKpC,MACZc,OAAQsB,EAAKtB,OACbuB,OAAQD,EAAKC,OACbC,QAASF,EAAKE,gBCKTC,EALJ,CACTC,IAdU,SAACf,EAAKgB,GAChB,IAAMP,EAAOQ,aAAaC,QAAQlB,GAClC,OAAa,OAATS,EACKO,EAEAG,KAAKC,MAAMX,IAUpBY,IANU,SAACrB,EAAKH,GAChBoB,aAAaK,QAAQtB,EAAKmB,KAAKI,UAAU1B,MCmE5B2B,EAnEH,WACV,MAAoCC,mBAASX,EAAGC,IAAI,aAAc,KAAlE,mBAAOrC,EAAP,KAAmBgD,EAAnB,KACA,EAAoCD,mBAAS,IAA7C,mBAAOE,EAAP,KAAmBC,EAAnB,KACA,EAAwCH,mBAAS,IAAjD,mBAAOI,EAAP,KAAqBC,EAArB,KAEAC,qBAAU,WACkB,IAAtBrD,EAAWsD,QACb5B,IAAME,MAAK,SAACG,GACViB,EAAcjB,QAGjB,IAEHsB,qBAAU,WACRjB,EAAGO,IAAI,aAAc3C,KACpB,CAACA,IAEJ,IAUMuD,EAAoBvD,EACvBwD,QAAO,SAACxD,GACP,OAAOA,EAAWG,KACfsD,cACAC,cACAC,SAASV,EAAWQ,cAAcC,kBAEtCF,QAAO,SAACxD,GACP,OAAOA,EAAWI,QACfqD,cACAC,cACAC,SAASR,EAAaM,cAAcC,kBAc3C,OACE,sBAAK/D,UAAU,MAAf,UACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,eAAC,IAAD,CAAOiE,OAAK,EAACC,KAAK,IAAlB,UACE,cAAC,EAAD,CAASxC,cAxCK,SAACU,GACrB,GAAiB,SAAbA,EAAKT,IACP4B,EAAcnB,EAAKZ,WACd,IAAiB,YAAbY,EAAKT,IAGd,OAAO,4FAFP8B,EAAgBrB,EAAKZ,WAqCjB,cAAC,EAAD,CAAenB,WAAyBuD,OAG1C,cAAC,IAAD,CAAOM,KAAK,kBAAkBC,OApBN,SAACjD,GAC7B,IAAMkD,EAAclD,EAAMmD,MAAMC,OAAO/D,GACjCgE,EAAgBlE,EAAWmE,MAAK,SAACnE,GACrC,OAAOA,EAAWE,KAAOkE,SAASL,MAGpC,GADAtD,QAAQC,IAAIwD,QACUG,IAAlBH,EACF,OAAO,cAAC,EAAD,CAAiBlE,WAAYkE,cC9C3BI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5C,MAAK,YAAkD,IAA/C6C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAAShB,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFiB,SAASC,eAAe,SAG1BV,M","file":"static/js/main.00d2bec3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Rick_and_Morty_-_logo_(English).de13d484.png\";","import image from \"../images/Rick_and_Morty_-_logo_(English).png\";\r\nimport \"../stylesheets/_header.scss\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header-image\">\r\n      <img src={image} alt=\"header-logo\" className=\"header-image__img\" />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import \"../stylesheets/_characterCard.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction CharacterCard({ characters }) {\r\n  return (\r\n    <li className=\"card__img\">\r\n      <Link to={`/characters/${characters.id}`}>\r\n        <img\r\n          className=\"card__img--photo\"\r\n          src={characters.image}\r\n          alt={characters.name}\r\n        />\r\n        <h2 className=\"card__img--name\">{characters.name}</h2>\r\n        <p className=\"card__img--specie\">{characters.species}</p>\r\n      </Link>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default CharacterCard;\r\n","import CharacterCard from \"./CharacterCard\";\r\nimport \"../stylesheets/_characterList.scss\";\r\n\r\nfunction CharacterList({ characters }) {\r\n  const characterElement = characters.map((characters) => {\r\n    return <CharacterCard key={characters.id} characters={characters} />;\r\n  });\r\n\r\n  return (\r\n    <section className=\"card-container\">\r\n      <ul className=\"card\">{characterElement}</ul>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default CharacterList;\r\n","import { Link } from \"react-router-dom\";\r\nimport \"../stylesheets/_characterDetail.scss\";\r\n\r\nfunction CharacterDetail({ characters }) {\r\n  console.log(characters);\r\n  return (\r\n    <div className=\"info-container\">\r\n      <section className=\"info\">\r\n        <div className=\"info-back\">\r\n          <Link to=\"/\">Volver</Link>\r\n        </div>\r\n        <img src=\"\" alt=\"\" className=\"info-img\" />\r\n        <article className=\"info-text\">\r\n          <ul className=\"info-text__list\">\r\n            <li className=\"info-text__list--elem\">\r\n              <h2>{characters.name}</h2>\r\n            </li>\r\n            <li className=\"info-text__list--elem\">\r\n              Status: {characters.status}\r\n            </li>\r\n            <li className=\"info-text__list--elem\">\r\n              Specie: {/*characters.species*/}\r\n            </li>\r\n            <li className=\"info-text__list--elem\">\r\n              Origin: {/*{props.origin}*/}\r\n            </li>\r\n            <li className=\"info-text__list--elem\">\r\n              Episode: {/*characters.episode*/}\r\n            </li>\r\n          </ul>\r\n        </article>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CharacterDetail;\r\n","import \"../stylesheets/_filters.scss\";\r\n\r\nconst FilterName = (props) => {\r\n  const handleChange = (ev) => {\r\n    console.log(ev.type, ev.target.value);\r\n    ev.preventDefault();\r\n    props.handleFilters({\r\n      value: ev.target.value,\r\n      key: \"name\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <label htmlFor=\"\" className=\"form__container--name\">\r\n        Nombre{\" \"}\r\n      </label>\r\n      <input type=\"text\" className=\"search\" onChange={handleChange} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FilterName;\r\n","import \"../stylesheets/_filters.scss\";\r\n\r\nconst FilterSpecies = (props) => {\r\n  const handleChange = (ev) => {\r\n    console.log(ev.type, ev.target.value);\r\n    props.handleFilters({\r\n      value: ev.target.value,\r\n      key: \"species\",\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <label htmlFor=\"\" className=\"form__container--specie\">\r\n        Especie{\" \"}\r\n      </label>\r\n      <input type=\"text\" className=\"search\" onChange={handleChange} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FilterSpecies;\r\n","import FilterName from \"./FilterName\";\r\nimport FilterSpecies from \"./FilterSpecies\";\r\nimport \"../stylesheets/_filters.scss\";\r\n\r\nconst Filters = (props) => {\r\n  return (\r\n    <section className=\"form\">\r\n      <form action=\"\" className=\"form__container\">\r\n        <FilterName handleFilters={props.handleFilters}></FilterName>\r\n        <FilterSpecies handleFilters={props.handleFilters}></FilterSpecies>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Filters;\r\n","//fetch\r\nconst api = () => {\r\n  return fetch(\"https://rickandmortyapi.com/api/character\")\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      return data.results.map((user) => {\r\n        return {\r\n          name: user.name,\r\n          id: user.id,\r\n          species: user.species,\r\n          image: user.image,\r\n          status: user.status,\r\n          origin: user.origin,\r\n          episode: user.episode,\r\n        };\r\n      });\r\n    });\r\n};\r\n\r\nexport default api;\r\n","const get = (key, defaultForm) => {\r\n  const data = localStorage.getItem(key);\r\n  if (data === null) {\r\n    return defaultForm;\r\n  } else {\r\n    return JSON.parse(data);\r\n  }\r\n};\r\n\r\nconst set = (key, value) => {\r\n  localStorage.setItem(key, JSON.stringify(value));\r\n};\r\n\r\nconst ls = {\r\n  get: get,\r\n  set: set,\r\n};\r\n\r\nexport default ls;\r\n","import \"../stylesheets/App.scss\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport CharacterList from \"./CharacterList\";\nimport CharacterDetail from \"./CharacterDetail\";\nimport Filters from \"./Filters\";\nimport { useEffect, useState } from \"react\";\nimport api from \"../services/api.js\";\nimport ls from \"../services/localstorage\";\n\nconst App = () => {\n  const [characters, setCharacters] = useState(ls.get(\"characters\", []));\n  const [filterName, setFilterName] = useState(\"\");\n  const [filterSpecie, setFilterSpecie] = useState(\"\");\n\n  useEffect(() => {\n    if (characters.length === 0) {\n      api().then((data) => {\n        setCharacters(data);\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    ls.set(\"characters\", characters);\n  }, [characters]);\n\n  const handleFilters = (data) => {\n    if (data.key === \"name\") {\n      setFilterName(data.value);\n    } else if (data.key === \"species\") {\n      setFilterSpecie(data.value);\n    } else {\n      return <h2>No hay ningún personaje que coincida con la búsqueda</h2>;\n    }\n  };\n\n  const filteredCharacter = characters\n    .filter((characters) => {\n      return characters.name\n        .toLowerCase()\n        .toUpperCase()\n        .includes(filterName.toLowerCase().toUpperCase());\n    })\n    .filter((characters) => {\n      return characters.species\n        .toLowerCase()\n        .toUpperCase()\n        .includes(filterSpecie.toLowerCase().toUpperCase());\n    });\n\n  const renderCharacterDetail = (props) => {\n    const characterId = props.match.params.id;\n    const findCharacter = characters.find((characters) => {\n      return characters.id === parseInt(characterId);\n    });\n    console.log(findCharacter);\n    if (findCharacter !== undefined) {\n      return <CharacterDetail characters={findCharacter} />;\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Switch>\n        <Route exact path=\"/\">\n          <Filters handleFilters={handleFilters}></Filters>\n          <CharacterList characters={(characters, filteredCharacter)} />\n        </Route>\n\n        <Route path=\"/characters/:id\" render={renderCharacterDetail} />\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"../src/stylesheets/index.scss\";\nimport App from \"../src/components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}