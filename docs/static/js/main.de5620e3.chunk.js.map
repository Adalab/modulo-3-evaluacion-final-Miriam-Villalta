{"version":3,"sources":["images/Rick_and_Morty_-_logo_(English).png","components/Header.js","components/CharacterCard.js","components/CharacterList.js","components/CharacterDetail.js","components/FilterName.js","components/FilterSpecies.js","components/Filters.js","services/api.js","services/localstorage.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","image","alt","CharacterCard","characters","to","id","name","species","CharacterList","characterElement","length","map","CharacterDetail","status","origin","FilterName","props","htmlFor","type","onChange","ev","console","log","target","value","preventDefault","handleFilters","key","FilterSpecies","Filters","action","api","fetch","then","response","json","data","results","user","episode","ls","get","defaultForm","localStorage","getItem","JSON","parse","set","setItem","stringify","App","useState","setCharacters","filterName","setFilterName","filterSpecie","setFilterSpecie","useEffect","filteredCharacter","filter","toLowerCase","toUpperCase","includes","exact","path","render","characterId","match","params","findCharacter","find","parseInt","undefined","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.de5620e3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Rick_and_Morty_-_logo_(English).de13d484.png\";","import image from \"../images/Rick_and_Morty_-_logo_(English).png\";\r\nimport \"../stylesheets/_header.scss\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header-image\">\r\n      <img src={image} alt=\"header-logo\" className=\"header-image__img\" />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import \"../stylesheets/_characterCard.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction CharacterCard({ characters }) {\r\n  return (\r\n    <li className=\"card__img\">\r\n      <Link to={`/characters/${characters.id}`}>\r\n        <img\r\n          className=\"card__img--photo\"\r\n          src={characters.image}\r\n          alt={characters.name}\r\n        />\r\n        <h2 className=\"card__img--name\">{characters.name}</h2>\r\n        <p className=\"card__img--specie\">{characters.species}</p>\r\n      </Link>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default CharacterCard;\r\n","import CharacterCard from \"./CharacterCard\";\r\nimport \"../stylesheets/_characterList.scss\";\r\n\r\nfunction CharacterList({ characters }) {\r\n  let characterElement = \"\";\r\n  if (characters.length === 0) {\r\n    return (\r\n      <h2 className=\"not-found\">\r\n        No hay ningún personaje que coincida con la búsqueda\r\n      </h2>\r\n    );\r\n  } else {\r\n    characterElement = characters.map((characters) => {\r\n      return <CharacterCard key={characters.id} characters={characters} />;\r\n    });\r\n  }\r\n  return (\r\n    <section className=\"card-container\">\r\n      <ul className=\"card\">{characterElement}</ul>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default CharacterList;\r\n","import { Link } from \"react-router-dom\";\r\nimport \"../stylesheets/_characterDetail.scss\";\r\n\r\nfunction CharacterDetail({ characters }) {\r\n  return (\r\n    <div className=\"info-container\">\r\n      <section className=\"info\">\r\n        <div className=\"info-back\">\r\n          <Link to=\"/\">Volver</Link>\r\n        </div>\r\n        <img src={characters.image} alt=\"\" className=\"info-img\" />\r\n        <article className=\"info-text\">\r\n          <ul className=\"info-text__list\">\r\n            <li className=\"info-text__list--elem\">\r\n              <h2>{characters.name}</h2>\r\n            </li>\r\n            <li className=\"info-text__list--elem\">\r\n              Status: {characters.status}\r\n            </li>\r\n            <li className=\"info-text__list--elem\">\r\n              Specie: {characters.species}\r\n            </li>\r\n            <li className=\"info-text__list--elem\">\r\n              Origin: {characters.origin.name}\r\n            </li>\r\n            <li className=\"info-text__list--elem\">\r\n              Episode: {/*characters.episode*/}\r\n            </li>\r\n          </ul>\r\n        </article>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CharacterDetail;\r\n","import \"../stylesheets/_filters.scss\";\r\n\r\nconst FilterName = (props) => {\r\n  const handleChange = (ev) => {\r\n    console.log(ev.type, ev.target.value);\r\n    ev.preventDefault();\r\n    props.handleFilters({\r\n      value: ev.target.value,\r\n      key: \"name\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <label htmlFor=\"\" className=\"form__container--name\">\r\n        Nombre{\" \"}\r\n      </label>\r\n      <input type=\"text\" className=\"search\" onChange={handleChange} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FilterName;\r\n","import \"../stylesheets/_filters.scss\";\r\n\r\nconst FilterSpecies = (props) => {\r\n  const handleChange = (ev) => {\r\n    console.log(ev.type, ev.target.value);\r\n    props.handleFilters({\r\n      value: ev.target.value,\r\n      key: \"species\",\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <label htmlFor=\"\" className=\"form__container--specie\">\r\n        Especie{\" \"}\r\n      </label>\r\n      <select name=\"\" id=\"\" className=\"search\" onChange={handleChange}>\r\n        <option value=\"Select\">Selecciona</option>\r\n        <option value=\"human\">Human</option>\r\n        <option value=\"alien\">Alien</option>\r\n      </select>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FilterSpecies;\r\n","import FilterName from \"./FilterName\";\r\nimport FilterSpecies from \"./FilterSpecies\";\r\nimport \"../stylesheets/_filters.scss\";\r\n\r\nconst Filters = (props) => {\r\n  return (\r\n    <section className=\"form\">\r\n      <form action=\"\" className=\"form__container\">\r\n        <FilterName handleFilters={props.handleFilters}></FilterName>\r\n        <FilterSpecies handleFilters={props.handleFilters}></FilterSpecies>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Filters;\r\n","//fetch\r\nconst api = () => {\r\n  return fetch(\"https://rickandmortyapi.com/api/character\")\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      return data.results.map((user) => {\r\n        return {\r\n          name: user.name,\r\n          id: user.id,\r\n          species: user.species,\r\n          image: user.image,\r\n          status: user.status,\r\n          origin: user.origin,\r\n          episode: user.episode,\r\n        };\r\n      });\r\n    });\r\n};\r\n\r\nexport default api;\r\n","const get = (key, defaultForm) => {\r\n  const data = localStorage.getItem(key);\r\n  if (data === null) {\r\n    return defaultForm;\r\n  } else {\r\n    return JSON.parse(data);\r\n  }\r\n};\r\n\r\nconst set = (key, value) => {\r\n  localStorage.setItem(key, JSON.stringify(value));\r\n};\r\n\r\nconst ls = {\r\n  get: get,\r\n  set: set,\r\n};\r\n\r\nexport default ls;\r\n","import \"../stylesheets/App.scss\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport CharacterList from \"./CharacterList\";\nimport CharacterDetail from \"./CharacterDetail\";\nimport Filters from \"./Filters\";\nimport { useEffect, useState } from \"react\";\nimport api from \"../services/api.js\";\nimport ls from \"../services/localstorage\";\n\nconst App = () => {\n  const [characters, setCharacters] = useState(ls.get(\"characters\", []));\n  const [filterName, setFilterName] = useState(\"\");\n  const [filterSpecie, setFilterSpecie] = useState(\"\");\n\n  useEffect(() => {\n    if (characters.length === 0) {\n      api().then((data) => {\n        setCharacters(data);\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    ls.set(\"characters\", characters);\n  }, [characters]);\n\n  const handleFilters = (data) => {\n    if (data.key === \"name\") {\n      setFilterName(data.value);\n    } else if (data.key === \"species\") {\n      setFilterSpecie(data.value);\n    }\n  };\n\n  const filteredCharacter = characters\n    .filter((characters) => {\n      return characters.name\n        .toLowerCase()\n        .toUpperCase()\n        .includes(filterName.toLowerCase().toUpperCase());\n    })\n    .filter((characters) => {\n      return characters.species\n        .toLowerCase()\n        .toUpperCase()\n        .includes(filterSpecie.toLowerCase().toUpperCase());\n    });\n\n  const renderCharacterDetail = (props) => {\n    const characterId = props.match.params.id;\n    const findCharacter = characters.find((characters) => {\n      return characters.id === parseInt(characterId);\n    });\n\n    if (findCharacter !== undefined) {\n      return <CharacterDetail characters={findCharacter} />;\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Switch>\n        <Route exact path=\"/\">\n          <Filters handleFilters={handleFilters}></Filters>\n          <CharacterList characters={(characters, filteredCharacter)} />\n        </Route>\n\n        <Route path=\"/characters/:id\" render={renderCharacterDetail} />\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"../src/stylesheets/index.scss\";\nimport App from \"../src/components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}